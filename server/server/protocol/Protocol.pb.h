// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#ifndef PROTOBUF_INCLUDED_Protocol_2eproto
#define PROTOBUF_INCLUDED_Protocol_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Protocol_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Protocol_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Protocol_2eproto();
namespace Message {
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class CommandList;
class CommandListDefaultTypeInternal;
extern CommandListDefaultTypeInternal _CommandList_default_instance_;
class KeyChange;
class KeyChangeDefaultTypeInternal;
extern KeyChangeDefaultTypeInternal _KeyChange_default_instance_;
class KeyData;
class KeyDataDefaultTypeInternal;
extern KeyDataDefaultTypeInternal _KeyData_default_instance_;
}  // namespace Message
namespace google {
namespace protobuf {
template<> ::Message::Command* Arena::CreateMaybeMessage<::Message::Command>(Arena*);
template<> ::Message::CommandList* Arena::CreateMaybeMessage<::Message::CommandList>(Arena*);
template<> ::Message::KeyChange* Arena::CreateMaybeMessage<::Message::KeyChange>(Arena*);
template<> ::Message::KeyData* Arena::CreateMaybeMessage<::Message::KeyData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Message {

enum KeyType {
  Fire = 0,
  Change = 1,
  TypeCount = 2
};
bool KeyType_IsValid(int value);
const KeyType KeyType_MIN = Fire;
const KeyType KeyType_MAX = TypeCount;
const int KeyType_ARRAYSIZE = KeyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* KeyType_descriptor();
inline const ::std::string& KeyType_Name(KeyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    KeyType_descriptor(), value);
}
inline bool KeyType_Parse(
    const ::std::string& name, KeyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KeyType>(
    KeyType_descriptor(), name, value);
}
enum KeyState {
  Down = 0,
  Up = 1,
  Click = 2,
  StateCount = 3
};
bool KeyState_IsValid(int value);
const KeyState KeyState_MIN = Down;
const KeyState KeyState_MAX = StateCount;
const int KeyState_ARRAYSIZE = KeyState_MAX + 1;

const ::google::protobuf::EnumDescriptor* KeyState_descriptor();
inline const ::std::string& KeyState_Name(KeyState value) {
  return ::google::protobuf::internal::NameOfEnum(
    KeyState_descriptor(), value);
}
inline bool KeyState_Parse(
    const ::std::string& name, KeyState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KeyState>(
    KeyState_descriptor(), name, value);
}
enum CmdType {
  UserIn = 0,
  UserOut = 1,
  GameEnd = 2,
  GameBegin = 3
};
bool CmdType_IsValid(int value);
const CmdType CmdType_MIN = UserIn;
const CmdType CmdType_MAX = GameBegin;
const int CmdType_ARRAYSIZE = CmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CmdType_descriptor();
inline const ::std::string& CmdType_Name(CmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CmdType_descriptor(), value);
}
inline bool CmdType_Parse(
    const ::std::string& name, CmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CmdType>(
    CmdType_descriptor(), name, value);
}
// ===================================================================

class KeyData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.KeyData) */ {
 public:
  KeyData();
  virtual ~KeyData();

  KeyData(const KeyData& from);

  inline KeyData& operator=(const KeyData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyData(KeyData&& from) noexcept
    : KeyData() {
    *this = ::std::move(from);
  }

  inline KeyData& operator=(KeyData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const KeyData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyData* internal_default_instance() {
    return reinterpret_cast<const KeyData*>(
               &_KeyData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(KeyData* other);
  friend void swap(KeyData& a, KeyData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyData* New() const final {
    return CreateMaybeMessage<KeyData>(nullptr);
  }

  KeyData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KeyData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KeyData& from);
  void MergeFrom(const KeyData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Message.KeyType key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::Message::KeyType key() const;
  void set_key(::Message::KeyType value);

  // required .Message.KeyState keyState = 2;
  bool has_keystate() const;
  void clear_keystate();
  static const int kKeyStateFieldNumber = 2;
  ::Message::KeyState keystate() const;
  void set_keystate(::Message::KeyState value);

  // @@protoc_insertion_point(class_scope:Message.KeyData)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int key_;
  int keystate_;
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class KeyChange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.KeyChange) */ {
 public:
  KeyChange();
  virtual ~KeyChange();

  KeyChange(const KeyChange& from);

  inline KeyChange& operator=(const KeyChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyChange(KeyChange&& from) noexcept
    : KeyChange() {
    *this = ::std::move(from);
  }

  inline KeyChange& operator=(KeyChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const KeyChange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyChange* internal_default_instance() {
    return reinterpret_cast<const KeyChange*>(
               &_KeyChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(KeyChange* other);
  friend void swap(KeyChange& a, KeyChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyChange* New() const final {
    return CreateMaybeMessage<KeyChange>(nullptr);
  }

  KeyChange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KeyChange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KeyChange& from);
  void MergeFrom(const KeyChange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message.KeyData keyDatas = 1;
  int keydatas_size() const;
  void clear_keydatas();
  static const int kKeyDatasFieldNumber = 1;
  ::Message::KeyData* mutable_keydatas(int index);
  ::google::protobuf::RepeatedPtrField< ::Message::KeyData >*
      mutable_keydatas();
  const ::Message::KeyData& keydatas(int index) const;
  ::Message::KeyData* add_keydatas();
  const ::google::protobuf::RepeatedPtrField< ::Message::KeyData >&
      keydatas() const;

  // @@protoc_insertion_point(class_scope:Message.KeyChange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Message::KeyData > keydatas_;
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class Command final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Command* other);
  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(nullptr);
  }

  Command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Message.CmdType ctype = 1;
  bool has_ctype() const;
  void clear_ctype();
  static const int kCtypeFieldNumber = 1;
  ::Message::CmdType ctype() const;
  void set_ctype(::Message::CmdType value);

  // @@protoc_insertion_point(class_scope:Message.Command)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int ctype_;
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class CommandList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.CommandList) */ {
 public:
  CommandList();
  virtual ~CommandList();

  CommandList(const CommandList& from);

  inline CommandList& operator=(const CommandList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandList(CommandList&& from) noexcept
    : CommandList() {
    *this = ::std::move(from);
  }

  inline CommandList& operator=(CommandList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CommandList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandList* internal_default_instance() {
    return reinterpret_cast<const CommandList*>(
               &_CommandList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CommandList* other);
  friend void swap(CommandList& a, CommandList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandList* New() const final {
    return CreateMaybeMessage<CommandList>(nullptr);
  }

  CommandList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommandList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommandList& from);
  void MergeFrom(const CommandList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message.Command commandDatas = 1;
  int commanddatas_size() const;
  void clear_commanddatas();
  static const int kCommandDatasFieldNumber = 1;
  ::Message::Command* mutable_commanddatas(int index);
  ::google::protobuf::RepeatedPtrField< ::Message::Command >*
      mutable_commanddatas();
  const ::Message::Command& commanddatas(int index) const;
  ::Message::Command* add_commanddatas();
  const ::google::protobuf::RepeatedPtrField< ::Message::Command >&
      commanddatas() const;

  // @@protoc_insertion_point(class_scope:Message.CommandList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Message::Command > commanddatas_;
  friend struct ::TableStruct_Protocol_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// KeyData

// required .Message.KeyType key = 1;
inline bool KeyData::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyData::clear_key() {
  key_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Message::KeyType KeyData::key() const {
  // @@protoc_insertion_point(field_get:Message.KeyData.key)
  return static_cast< ::Message::KeyType >(key_);
}
inline void KeyData::set_key(::Message::KeyType value) {
  assert(::Message::KeyType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  key_ = value;
  // @@protoc_insertion_point(field_set:Message.KeyData.key)
}

// required .Message.KeyState keyState = 2;
inline bool KeyData::has_keystate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyData::clear_keystate() {
  keystate_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::Message::KeyState KeyData::keystate() const {
  // @@protoc_insertion_point(field_get:Message.KeyData.keyState)
  return static_cast< ::Message::KeyState >(keystate_);
}
inline void KeyData::set_keystate(::Message::KeyState value) {
  assert(::Message::KeyState_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  keystate_ = value;
  // @@protoc_insertion_point(field_set:Message.KeyData.keyState)
}

// -------------------------------------------------------------------

// KeyChange

// repeated .Message.KeyData keyDatas = 1;
inline int KeyChange::keydatas_size() const {
  return keydatas_.size();
}
inline void KeyChange::clear_keydatas() {
  keydatas_.Clear();
}
inline ::Message::KeyData* KeyChange::mutable_keydatas(int index) {
  // @@protoc_insertion_point(field_mutable:Message.KeyChange.keyDatas)
  return keydatas_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Message::KeyData >*
KeyChange::mutable_keydatas() {
  // @@protoc_insertion_point(field_mutable_list:Message.KeyChange.keyDatas)
  return &keydatas_;
}
inline const ::Message::KeyData& KeyChange::keydatas(int index) const {
  // @@protoc_insertion_point(field_get:Message.KeyChange.keyDatas)
  return keydatas_.Get(index);
}
inline ::Message::KeyData* KeyChange::add_keydatas() {
  // @@protoc_insertion_point(field_add:Message.KeyChange.keyDatas)
  return keydatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::KeyData >&
KeyChange::keydatas() const {
  // @@protoc_insertion_point(field_list:Message.KeyChange.keyDatas)
  return keydatas_;
}

// -------------------------------------------------------------------

// Command

// required .Message.CmdType ctype = 1;
inline bool Command::has_ctype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Command::clear_ctype() {
  ctype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Message::CmdType Command::ctype() const {
  // @@protoc_insertion_point(field_get:Message.Command.ctype)
  return static_cast< ::Message::CmdType >(ctype_);
}
inline void Command::set_ctype(::Message::CmdType value) {
  assert(::Message::CmdType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  ctype_ = value;
  // @@protoc_insertion_point(field_set:Message.Command.ctype)
}

// -------------------------------------------------------------------

// CommandList

// repeated .Message.Command commandDatas = 1;
inline int CommandList::commanddatas_size() const {
  return commanddatas_.size();
}
inline void CommandList::clear_commanddatas() {
  commanddatas_.Clear();
}
inline ::Message::Command* CommandList::mutable_commanddatas(int index) {
  // @@protoc_insertion_point(field_mutable:Message.CommandList.commandDatas)
  return commanddatas_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Message::Command >*
CommandList::mutable_commanddatas() {
  // @@protoc_insertion_point(field_mutable_list:Message.CommandList.commandDatas)
  return &commanddatas_;
}
inline const ::Message::Command& CommandList::commanddatas(int index) const {
  // @@protoc_insertion_point(field_get:Message.CommandList.commandDatas)
  return commanddatas_.Get(index);
}
inline ::Message::Command* CommandList::add_commanddatas() {
  // @@protoc_insertion_point(field_add:Message.CommandList.commandDatas)
  return commanddatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::Command >&
CommandList::commanddatas() const {
  // @@protoc_insertion_point(field_list:Message.CommandList.commandDatas)
  return commanddatas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Message::KeyType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Message::KeyType>() {
  return ::Message::KeyType_descriptor();
}
template <> struct is_proto_enum< ::Message::KeyState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Message::KeyState>() {
  return ::Message::KeyState_descriptor();
}
template <> struct is_proto_enum< ::Message::CmdType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Message::CmdType>() {
  return ::Message::CmdType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Protocol_2eproto
